{"remainingRequest":"/usr/local/lib/node_modules/@vue/cli-service-global/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/daltonculp/Documents/GitHub/vue-unidemo-sample/components/Profile.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/daltonculp/Documents/GitHub/vue-unidemo-sample/components/Profile.vue","mtime":1559342301812},{"path":"/usr/local/lib/node_modules/@vue/cli-service-global/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/usr/local/lib/node_modules/@vue/cli-service-global/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/usr/local/lib/node_modules/@vue/cli-service-global/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nexport default {\n  name: 'Profile',\n  data () {\n    return {\n      claims: []\n    }\n  },\n  async created () {\n    this.claims = await Object.entries(await this.$auth.getUser()).map(entry => ({ claim: entry[0], value: entry[1] }))\n  }\n}\n",{"version":3,"sources":["Profile.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Profile.vue","sourceRoot":"components","sourcesContent":["<template>\n  <div class=\"profile\">\n    <h1 class=\"ui header\">\n      <i\n        aria-hidden=\"true\"\n        class=\"drivers license outline icon\"\n      >\n      </i>\n      My User Profile (ID Token Claims)\n    </h1>\n    <table class=\"ui table\">\n      <thead>\n        <tr>\n          <th>Claim</th>\n          <th>Value</th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr\n          v-for=\"(claim, index) in claims\"\n          :key=\"index\"\n        >\n          <td>{{claim.claim}}</td>\n          <td :id=\"'claim-' + claim.claim\">{{claim.value}}</td>\n        </tr>\n      </tbody>\n    </table>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'Profile',\n  data () {\n    return {\n      claims: []\n    }\n  },\n  async created () {\n    this.claims = await Object.entries(await this.$auth.getUser()).map(entry => ({ claim: entry[0], value: entry[1] }))\n  }\n}\n</script>\n"]}]}