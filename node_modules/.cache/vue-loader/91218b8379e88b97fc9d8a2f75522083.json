{"remainingRequest":"/usr/local/lib/node_modules/@vue/cli-service-global/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/daltonculp/Documents/GitHub/vue-unidemo-sample/components/Login.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/daltonculp/Documents/GitHub/vue-unidemo-sample/components/Login.vue","mtime":1559624640940},{"path":"/usr/local/lib/node_modules/@vue/cli-service-global/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/usr/local/lib/node_modules/@vue/cli-service-global/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/usr/local/lib/node_modules/@vue/cli-service-global/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n  var config = {\n    url: 'https://beachbodyciam.oktapreview.com',\n    issuer: 'https://beachbodyciam.oktapreview.com/oauth2/default',\n    clientId: '0oal7qfzxpANpMYQU0h7',\n    redirectUri: 'http://localhost:8080/implicit/callback',\n    tokenManager: {\n      storage: 'sessionStorage'\n    },\n  };\n\n  var OktaAuth = require('@okta/okta-auth-js');\n  var authClient = new OktaAuth(config);\n\n  authClient.session.get().then(function(session) {\n    console.log(\"Got session:\");\n    console.log(session);\n\n  authClient.token.getWithoutPrompt({\n    responseType: [\"id_token\", \"token\"],\n    scopes: [\"openid\", \"email\"] // or array of types// optional if the user has an existing Okta session\n  }).then(function(tokens) {\n    console.log(\"Got tokens:\");\n    console.log(tokens);\n    tokens.forEach(function(token) {\n      ['idToken', 'accessToken'].forEach(function(kind) {\n        if (kind in token) {\n          console.log(\"Received an \" + kind + \" from Okta:\");\n          console.log(token);\n          authClient.tokenManager.add(kind, token);\n        }\n      });\n    });\n    // [jpf] FIXME: Is this needed?\n    var accessToken = authClient.tokenManager.get('accessToken');\n    var base64Url = accessToken.accessToken.split('.')[1];\n    var base64 = base64Url.replace('-', '+').replace('_', '/');\n    var info = JSON.parse(window.atob(base64));\n    console.log(info)\n  }).else(function() {\n    console.log(\"Didn't get tokens\");\n  })\n})\n\n",{"version":3,"sources":["Login.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Login.vue","sourceRoot":"components","sourcesContent":["<template>\n  <div class=\"login\">\n    <div id=\"okta-signin-container\"></div>\n  </div>\n</template>\n\n<script>\nimport OktaSignIn from '@okta/okta-signin-widget'\nimport '@okta/okta-signin-widget/dist/css/okta-sign-in.min.css'\nimport '@okta/okta-signin-widget/dist/css/okta-theme.css'\nimport authConfig from '../.config.js'\n\n\nexport default {\n  name: 'Login',\n  mounted: function () {\n    this.$nextTick(function () {\n      this.widget = new OktaSignIn({\n        baseUrl: authConfig.oidc.issuer.split('/oauth2')[0],\n        clientId: authConfig.oidc.client_id,\n        redirectUri: authConfig.oidc.redirect_uri,\n        authParams: {\n          responseType: ['id_token', 'token'],\n          issuer: authConfig.oidc.issuer,\n          scopes: authConfig.oidc.scope.split(' '),\n          display: 'page'\n        }\n      })\n\n      this.widget.renderEl(\n        { el: '#okta-signin-container' },\n        () => {\n\n        },\n        (err) => {\n          throw err\n        }\n      )\n    })\n  },\n  destroyed () {\n    // Remove the widget from the DOM on path change\n    this.widget.remove()\n  }\n}\n</script>\n\n<script>\n  var config = {\n    url: 'https://beachbodyciam.oktapreview.com',\n    issuer: 'https://beachbodyciam.oktapreview.com/oauth2/default',\n    clientId: '0oal7qfzxpANpMYQU0h7',\n    redirectUri: 'http://localhost:8080/implicit/callback',\n    tokenManager: {\n      storage: 'sessionStorage'\n    },\n  };\n\n  var OktaAuth = require('@okta/okta-auth-js');\n  var authClient = new OktaAuth(config);\n\n  authClient.session.get().then(function(session) {\n    console.log(\"Got session:\");\n    console.log(session);\n\n  authClient.token.getWithoutPrompt({\n    responseType: [\"id_token\", \"token\"],\n    scopes: [\"openid\", \"email\"] // or array of types// optional if the user has an existing Okta session\n  }).then(function(tokens) {\n    console.log(\"Got tokens:\");\n    console.log(tokens);\n    tokens.forEach(function(token) {\n      ['idToken', 'accessToken'].forEach(function(kind) {\n        if (kind in token) {\n          console.log(\"Received an \" + kind + \" from Okta:\");\n          console.log(token);\n          authClient.tokenManager.add(kind, token);\n        }\n      });\n    });\n    // [jpf] FIXME: Is this needed?\n    var accessToken = authClient.tokenManager.get('accessToken');\n    var base64Url = accessToken.accessToken.split('.')[1];\n    var base64 = base64Url.replace('-', '+').replace('_', '/');\n    var info = JSON.parse(window.atob(base64));\n    console.log(info)\n  }).else(function() {\n    console.log(\"Didn't get tokens\");\n  })\n})\n\n</script> "]}]}