{"remainingRequest":"/usr/local/lib/node_modules/@vue/cli-service-global/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/daltonculp/Documents/GitHub/vue-unidemo-sample/components/Users.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/daltonculp/Documents/GitHub/vue-unidemo-sample/components/Users.vue","mtime":1559342301814},{"path":"/usr/local/lib/node_modules/@vue/cli-service-global/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/usr/local/lib/node_modules/@vue/cli-service-global/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/usr/local/lib/node_modules/@vue/cli-service-global/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport axios from 'axios'\n\nexport default {\n  name: 'Users',\n  data () {\n    return {\n      failed: false,\n      users: []\n    }\n  },\n  async created () {\n    try {\n      const accessToken = await this.$auth.getAccessToken()\n      const response = await axios.get(\n        '/unidemo/public/users',\n        {\n          headers: {\n            Authorization: `Bearer ${accessToken}`\n          }\n        }\n      )\n\n      const users = response.data.map((user) => {\n        let index = 1\n        return {\n          id: user.id,\n          login: user.profile.login,\n          index: index++\n        }\n      })\n      this.users = users\n    } catch (e) {\n      this.failed = true\n    }\n  }\n}\n",{"version":3,"sources":["Users.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2CA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Users.vue","sourceRoot":"components","sourcesContent":["<template>\n  <div class=\"users\">\n    <h1 class=\"ui header\">\n      <i\n        aria-hidden=\"true\"\n        class=\"mail outline icon\"\n      >\n      </i>\n      Users\n    </h1>\n    <div\n      v-if=\"failed\"\n      class=\"ui error message\"\n    >\n      <div class=\"content\">\n        <div class=\"header\">API Request Failed.</div>\n      </div>\n    </div>\n\n    <div v-if=\"users.length\">\n      <table class=\"ui table\">\n        <thead>\n          <tr>\n            <th>Id</th>\n            <th>Login</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr\n            v-for=\"(user, index) in users\"\n            :key=\"index\"\n            :id=\"'user-' + index\"\n          >\n            <td>{{user.id}}</td>\n            <td>{{user.login}}</td>\n          </tr>\n        </tbody>\n      </table>\n    </div>\n  </div>\n</template>\n\n<script>\nimport axios from 'axios'\n\nexport default {\n  name: 'Users',\n  data () {\n    return {\n      failed: false,\n      users: []\n    }\n  },\n  async created () {\n    try {\n      const accessToken = await this.$auth.getAccessToken()\n      const response = await axios.get(\n        '/unidemo/public/users',\n        {\n          headers: {\n            Authorization: `Bearer ${accessToken}`\n          }\n        }\n      )\n\n      const users = response.data.map((user) => {\n        let index = 1\n        return {\n          id: user.id,\n          login: user.profile.login,\n          index: index++\n        }\n      })\n      this.users = users\n    } catch (e) {\n      this.failed = true\n    }\n  }\n}\n</script>\n"]}]}